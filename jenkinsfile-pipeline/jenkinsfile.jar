// pipeline {
//     agent any

//     stages {
//         stage('Build stage') {
//             steps {
//                 echo 'Building the project'
//                 sh '''
//                     echo 'I am in the second stage'
//                     ls -l
//                     hostname
//                 '''
//             }
//         }
//     }
// }


  // pipeline {
  //   agent any
    
  //   environment {
  //     Name = 'production'
  //     Role = 'development'
  //   }
    
  //   stages {
  //     stage('Build stage') {
  //       steps{
  //         sh 'echo $Name'
  //       }
  //     }
  //   }
  // }

//   pipeline {
//     agent any
    
//     tools {
//       jdk 'JAVA_17'
//       maven 'Maven_3.9.8'
//     }
    
//     stages {
//       stage('Intialization the pipeline') {
//         steps{
//           sh '''
//           echo "PATH = ${PATH}"
//           echo "M2_HOME = ${M2_HOME}"
//           '''
//         }
//       }
      
//       stage ('invoking the code') {
//         steps{
          
//         }
//       }

//       stage('Build stage') {
//         steps{
//           sh 'mvn --version'
//       }
//     }
//   }
// }

// pipeline {
//   agent any

//   environment{
//     db_pwd = credentials('database_password')
//   }
//   stages {
//     stage ('Build stage') {
//       steps {
//        sh "echo $db_pwd"
//       }
//     }
//   }
// }

pipeline {

    // The agent name must match with the jenkins node name (Manage jenkins -> Nodes)
    agent {
        node {
            label 'Maven-build-server'
        }
    }

    // The tool name must match with the jenkins tools (global configuration) variable names
    tools {
        maven 'Maven-3.9.8'
    }

    // Define environment variables
    environment {
        APP_NAME = "ALAN_APP"
        APP_ENV  = "PRODUCTION"
    }

    // Cleanup the jenkins workspace before building an Application
    stages {
        // Build the application code using Maven
        stage('Code Build') {
            steps {
                 sh 'mvn install -Dmaven.test.skip=true'
            }
        }
    }
}